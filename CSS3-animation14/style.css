#transform {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  h1 {
    position: fixed;
    top: 2rem;
    left: 2rem;
    opacity: 0.25;
    margin: 0;
  }
  
  [for=transform] {
    color: transparent;
    position: fixed;
    inset: 0;
    color: transparent;
    font-weight: bold;
    height: 100vh;
    width: 100vw;
    cursor: pointer;
    transform: translate3d(0, 0, 500vmin);
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    z-index: 2;
  }
  
  body > [for=transform] span {
    display: block;
  }
  
  :root:has([for=transform] span:nth-of-type(1):hover) {
    --truck-turn: -10deg;
    --head-turn: -20deg;
  }
  :root:has([for=transform] span:nth-of-type(2):hover) {
    --truck-turn: -5deg;
    --head-turn: -10deg;
  }
  :root:has([for=transform] span:nth-of-type(3):hover) {
    --truck-turn: 0deg;
    --head-turn: 0deg;
  }
  :root:has([for=transform] span:nth-of-type(4):hover) {
    --truck-turn: 5deg;
    --head-turn: 10deg;
  }
  :root:has([for=transform] span:nth-of-type(5):hover) {
    --truck-turn: 10deg;
    --head-turn: 20deg;
  }
  
  .optimus__head-reactor {
    height: 100%;
    width: 100%;
  }
  :root:has(#transform:checked) .optimus__head-reactor {
    transform: rotateY(var(--head-turn, 0deg));
    transition: transform 0.125s;
  }
  
  :root:not(:has(#transform:checked)) .scene-turner {
    transform: rotateZ(var(--truck-turn, 0deg));
    transition: transform 0.125s;
  }
  
  *,
  *:after,
  *:before {
    box-sizing: border-box;
    transform-style: preserve-3d;
    touch-action: none;
  }
  
  :root {
    --size: 4;
    --optimus-rotation-y: -24;
    --optimus-rotation-x: -32;
    /* Optimus Colors */
    
    /* Transition speed */
    --transition-speed: 0.2s;
    /* Colors */
    --blue-1: hsl(215, 100%, 45%);
    --blue-2: hsl(215, 100%, 40%);
    --blue-3: hsl(215, 100%, 35%);
    --blue-4: hsl(215, 100%, 30%);
    --blue-5: hsl(215, 100%, 25%);
    --grey-1: hsl(228, 3%, 65%);
    --grey-2: hsl(228, 3%, 60%);
    --grey-3: hsl(228, 3%, 55%);
    --grey-4: hsl(228, 3%, 50%);
    --grey-5: hsl(228, 3%, 45%);
    --red-1: hsl(0, 74%, 50%);
    --red-2: hsl(0, 74%, 45%);
    --red-3: hsl(0, 74%, 40%);
    --red-4: hsl(0, 74%, 35%);
    --red-5: hsl(0, 74%, 30%);
    --eye-blue: hsl(210 100% 70%);
    --orange: hsl(42, 99%, 45%);
    /* Sizing and random stuff */
    --size: 5;
    --cab-width: calc(var(--size) * 3.6vmin);
    --cab-multiplier: 3.6;
    --torso-depth: calc(var(--size) * 2.6);
    --core-height: calc((var(--size) * 1 / 3) * 1);
    --chest-depth: calc(var(--torso-depth) * 0.6);
    --fist-dimension: calc((var(--size) * var(--cab-multiplier) - var(--size)) / 2);
    --fist-width: calc(((var(--size) * var(--cab-multiplier) - var(--size)) / 2) * 1vmin);
    --grill-height: calc(((var(--size) / 3) * 3.5) * 1vmin);
    --cab-height: calc(var(--grill-height) * 1.4);
    --wheel-depth: calc(var(--size) * 0.4);
    --leg-height: calc(var(--size) * 6.4);
  }
  
body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    overflow: hidden;
    background: hsl(210 20% 88%);
  }
  
  [for=speed] {
    cursor: pointer;
    position: fixed;
    bottom: 2rem;
    right: 2.24rem;
    z-index: 10;
    font-family: sans-serif, system-ui;
    transform: translate3d(0, 0, 500vmin);
  }
  
  #speed {
    position: fixed;
    bottom: 2.2rem;
    right: 1rem;
    z-index: 10;
    transform: translate3d(0, 0, 500vmin);
  }
  
  :root:has(#speed:checked) {
    --transition-speed: 2s;
  }
  
  #speed:checked ~ .scene-jumper {
    --transition-speed: 2s;
  }
  
  .scene {
    position: relative;
  }
  
  
  
  .optimus * {
    position: absolute;
  }
  
  /* Remember: The core is based on 3.5 x 6 so percentages can base off that. */
  
  .optimus__core {
    width: calc(var(--size) * 1vmin);
    aspect-ratio: 3 / 1;
    translate: -50% -50%;
  }
  
  .core {
    height: 100%;
    width: 100%;
  }
  
  .optimus__torso {
    width: 100%;
    height: 400%;
    bottom: 50%;
  }
  
  .optimus__grill {
    --color: var(--grey-1);
    width: 100%;
    bottom: 100%;
    height: var(--grill-height);
    --depth: calc(var(--torso-depth) * 1);
  }
  .optimus__grill .cuboid {
  /*  transform: translate3d(0, 0, calc(var(--torso-depth) * 0.1vmin));*/
  }
  .optimus__grill .cuboid__side:nth-of-type(6),
  .optimus__grill .cuboid__side:nth-of-type(5) {
    background: repeating-linear-gradient(var(--grey-1) 0 10%, var(--grey-5) 15% 15%);
  }
  
  .optimus__top {
    width: var(--cab-width);
    height: var(--cab-height);
    bottom: 100%;
    left: 50%;
    translate: -50% 0;
  }
  
  @keyframes breathe {
    50% {
      transform: translateY(-2%);
    }
  }
  
  .reference-box {
    height: 100%;
    width: 100%;
    --depth: var(--torso-depth);
    --color: hsl(0 100% 50% / 0.25);
  }
  
  .reference-box .cuboid__side {
    border: 1px solid white;
  }
  
  .exhaust {
    height: 200%;
    bottom: 10%;
    width: calc(var(--fist-width) * 0.2);
    --depth: calc(var(--fist-dimension) * 0.2);
    --color: var(--grey-3);
  }
  .arm--right .exhaust {
    left: 100%;
  }
  .arm--left .exhaust {
    right: 100%;
  }
  .chest {
    height: 100%;
    width: 100%;
    transform: translate3d(0, 0, calc(var(--torso-depth) * 0.1vmin));
    --depth: var(--chest-depth);
    --color: var(--red-1);
  }
  
  .chest > .cuboid > .cuboid__side:nth-of-type(1) {
    --h-stop-one: calc(50% - (var(--fist-width) * 0.5));
    --h-stop-two: calc(50% + (var(--fist-width) * 0.5));
    --v-stop-one: calc(var(--torso-depth) * 0.1vmin);
    --v-stop-two: calc(100% - (var(--torso-depth) * 0.1vmin));
    filter: none;
    background:
      linear-gradient(90deg, var(--red-1) 0 var(--h-stop-one), transparent var(--h-stop-one) var(--h-stop-two), var(--red-1) var(--h-stop-two)),
      linear-gradient(var(--red-1) 0 var(--v-stop-one), transparent var(--v-stop-one) var(--v-stop-two), var(--red-1) var(--v-stop-two));
  }
  
  .chest > .cuboid > .cuboid__side:nth-of-type(2),
  .chest > .cuboid > .cuboid__side:nth-of-type(4) {
    background: linear-gradient(var(--red-1) 80%, var(--grey-1) 80%);
  }
  
  .chest > .cuboid > .cuboid__side:nth-of-type(2):after,
  .chest > .cuboid > .cuboid__side:nth-of-type(4):after {
    content: "";
    height: 60%;
    left: 4%;
    top: 10%;
    position: absolute;
    background: var(--blue-5);
    border: calc(var(--torso-depth) * 0.05vmin) solid var(--grey-3);
  }
  
  .logo {
    width: 75%;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    opacity: 0.8;
  }
  